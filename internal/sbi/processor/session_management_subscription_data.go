/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package processor

import (
	"net/http"
	"encoding/json"

	"github.com/gin-gonic/gin"

	"github.com/free5gc/openapi/models"
	"github.com/free5gc/udr/internal/logger"
	datarepository "github.com/free5gc/udr/internal/sbi/datarepository"
	"github.com/free5gc/udr/internal/util"
)

// HTTPQuerySmData - Retrieves the Session Management subscription data of a UE
func (p *Processor) HandleQuerySmData(c *gin.Context) {
	logger.DataRepoLog.Infof("Handle QuerySmData")

	collName := "subscriptionData.provisionedData.smData"
	ueId := c.Params.ByName("ueId")
	servingPlmnId := c.Params.ByName("servingPlmnId")
	singleNssai := models.Snssai{}
	singleNssaiQuery := c.Query("singleNssai")
	err := json.Unmarshal([]byte(singleNssaiQuery), &singleNssai)
	if err != nil {
		logger.DataRepoLog.Warnln(err)
	}

	dnn := c.Query("dnn")
	data := datarepository.QuerySmDataProcedure(collName, ueId, servingPlmnId, singleNssai, dnn)

	if data == nil {
		pd := util.ProblemDetailsUpspecified("")
		c.JSON(int(pd.Status), pd)
	} else {
		c.JSON(http.StatusOK, data)
	}
}
